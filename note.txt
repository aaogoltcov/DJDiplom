Клиентская часть
1.  Просмотр товара и добавление в корзину (рядом с каждым товаром должна быть кнопка добавления в корзину) -
    в случае если пользователь не авторизирован, то предлагается сначала авторизироваться, если пользователь авторизирован,
    то пользователь может добавить товар в корзину.
2.  Главная страница со статьями о подборке товаров (отсортированы по дате создания статьи) и перечислением этих товаров.
    Для реализации создана модель Paper, которая ссылается на продукты в модели Good.
3.  Страница категории товара со списком товаров с пагинацией.
    Категории товаров описываются моделями Catalog и SubCatalog. SubCatalog создавался как пример для многоуровневого меню.
4.  Страница товара с подробным описанием.
    Сделано, также реализована форма обратной связи, с возможностью оставить анонимную ОС.

5.  Меню:
    5.1.    Ссылка на главную страницу.
            Сделано.
    5.2.    Ссылки на разделы (разделы могут иметь иерархию).
            Сделано на примере Гаджетов - Категории товаров описываются моделями Catalog и SubCatalog.
            SubCatalog создавался как пример для многоуровневого меню. Не стал настраивать HTML и CSS для SubCatalog, так как
            не нашел подходящего шаблона на bootstrap.
    5.3.    Ссылка на корзину.
            Сделано.
    5.4.    Кнопка входа/выхода в зависимости от статуса авторизации.
            Сделано.

6.  Корзина со списком выбранных товаров, привязанных к пользователю.
    Сделано.

7.  Кнопка заказа должна создавать заказ и очищать корзину.
    Сделано. Созданный заказ можно посмотреть в админке.

8.  Для входа использовать аутентификацию по email'у.
    Сделано.

9.  Интерфейс администратора.
    9.1.    Редактирование разделов.
            Сделано с помощью модели Catalog.
    9.2.    Редактирование товаров.
            Сделано с помощью модели Good.
    9.3.    Редактирование статей на главной странице и привязывание к ним товаров, которые должны отображаться после нее.
            Сделано с помощью модели Paper.
    9.4.    Просмотр списка заказов пользователей, отсортированных по дате создания, с указанием пользователя и количества товаров.
            Сделано с помощью модели Order.
    9.5.    Страница детализации заказа с просмотром списка заказанных товаров.
            Сделано с помощью модели Order.

10. Требования по проекту.
    10.1.   Миграции для создания базы данных.
            Сделано.
    >>> 10.2.   Инструкции по установке и первому запуску. Файл README.md в папке проекта.
    >>> 10.3.   Дамп данных с тестовым наполнением fixtures.json, с тестовым суперпользователем с именем admin и
            паролем admin (команда manage.py dumpdata для создания дампа).

11. Дополнительные задачи.
    11.1.   Реализовать механизм анонимных отзывов как показано на макете.
            Сделано.
    11.2.   Реализовать возможность регистрации по почте (без подтверждения почты).
            Сделано.
